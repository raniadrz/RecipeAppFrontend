{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { SearchBar } from 'react-native-elements';\nimport FoodCard from \"../components/FoodCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar screenWidth = Dimensions.get('window').width;\nvar fakeRecipes = [{\n  id: 1,\n  name: 'Spaghetti Bolognese',\n  description: 'Classic Italian pasta dish with meat sauce.'\n}, {\n  id: 2,\n  name: 'Margherita Pizza',\n  description: 'Traditional Italian pizza with tomato, mozzarella, and basil.'\n}, {\n  id: 3,\n  name: 'Caesar Salad',\n  description: 'Fresh salad with romaine lettuce, croutons, Parmesan cheese, and Caesar dressing.'\n}];\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(fakeRecipes),\n    _useState2 = _slicedToArray(_useState, 2),\n    recipes = _useState2[0],\n    setRecipes = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    searchQuery = _useState4[0],\n    setSearchQuery = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedRecipe = _useState6[0],\n    setSelectedRecipe = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isModalVisible = _useState8[0],\n    setIsModalVisible = _useState8[1];\n  var filteredRecipes = recipes.filter(function (recipe) {\n    return recipe.name.toLowerCase().includes(searchQuery.toLowerCase());\n  });\n  var handleFoodCardPress = function handleFoodCardPress(foodId) {\n    var recipe = recipes.find(function (recipe) {\n      return recipe.id === foodId;\n    });\n    setSelectedRecipe(recipe);\n    setIsModalVisible(true);\n  };\n  var closeModal = function closeModal() {\n    setIsModalVisible(false);\n    setSelectedRecipe(null);\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      padding: 25\n    },\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 24,\n        fontWeight: 'bold'\n      },\n      children: \"Hello, Noman!\"\n    }), _jsx(Text, {\n      style: {\n        fontSize: 18\n      },\n      children: \"Make your own food, home\"\n    }), _jsx(SearchBar, {\n      placeholder: \"Search recipes...\",\n      onChangeText: function onChangeText(text) {\n        return setSearchQuery(text);\n      },\n      value: searchQuery,\n      lightTheme: true,\n      round: true,\n      containerStyle: {\n        backgroundColor: 'transparent',\n        borderTopWidth: 0,\n        borderBottomWidth: 0,\n        top: 30\n      },\n      inputContainerStyle: {\n        backgroundColor: 'white'\n      },\n      searchIcon: {\n        name: 'search',\n        color: 'gray'\n      }\n    }), _jsx(FlatList, {\n      data: filteredRecipes,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(FoodCard, {\n          foodData: item,\n          onPress: function onPress() {\n            return handleFoodCardPress(item.id);\n          }\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      style: {\n        marginTop: 60\n      }\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: isModalVisible,\n      onRequestClose: closeModal,\n      children: _jsx(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center',\n          backgroundColor: 'rgba(0, 0, 0, 0.5)'\n        },\n        children: _jsx(View, {\n          style: {\n            backgroundColor: 'white',\n            padding: 20,\n            borderRadius: 10,\n            width: screenWidth - 40\n          },\n          children: selectedRecipe && _jsxs(_Fragment, {\n            children: [_jsx(Text, {\n              style: {\n                fontSize: 18,\n                fontWeight: 'bold',\n                marginBottom: 10\n              },\n              children: selectedRecipe.name\n            }), _jsx(Text, {\n              style: {\n                marginBottom: 10\n              },\n              children: selectedRecipe.description\n            }), _jsx(Button, {\n              title: \"Close\",\n              onPress: closeModal\n            })]\n          })\n        })\n      })\n    }), _jsx(TouchableOpacity, {\n      style: {\n        position: 'absolute',\n        bottom: 20,\n        right: 20,\n        backgroundColor: 'red',\n        width: 60,\n        height: 60,\n        borderRadius: 30,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      onPress: function onPress() {\n        return navigation.navigate('AddRecipeForm');\n      },\n      children: _jsx(Text, {\n        style: {\n          color: 'white',\n          fontSize: 24,\n          fontWeight: 'bold'\n        },\n        children: \"+\"\n      })\n    })]\n  });\n};\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","Button","Dimensions","FlatList","Modal","Text","TouchableOpacity","View","SearchBar","FoodCard","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","screenWidth","get","width","fakeRecipes","id","name","description","HomeScreen","_ref","navigation","_useState","_useState2","_slicedToArray","recipes","setRecipes","_useState3","_useState4","searchQuery","setSearchQuery","_useState5","_useState6","selectedRecipe","setSelectedRecipe","_useState7","_useState8","isModalVisible","setIsModalVisible","filteredRecipes","filter","recipe","toLowerCase","includes","handleFoodCardPress","foodId","find","closeModal","style","flex","padding","children","fontSize","fontWeight","placeholder","onChangeText","text","value","lightTheme","round","containerStyle","backgroundColor","borderTopWidth","borderBottomWidth","top","inputContainerStyle","searchIcon","color","data","renderItem","_ref2","item","foodData","onPress","keyExtractor","toString","marginTop","animationType","transparent","visible","onRequestClose","justifyContent","alignItems","borderRadius","marginBottom","title","position","bottom","right","height","navigate"],"sources":["/Users/rania/Documents/codes/THESIS/Recipe App/frontendDev/RecipeAppFrontend/src/screens/HomeScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, Dimensions, FlatList, Modal, Text, TouchableOpacity, View } from 'react-native';\nimport { SearchBar } from 'react-native-elements';\nimport FoodCard from '../components/FoodCard';\nconst screenWidth = Dimensions.get('window').width;\n\nconst fakeRecipes = [\n  { id: 1, name: 'Spaghetti Bolognese', description: 'Classic Italian pasta dish with meat sauce.' },\n  { id: 2, name: 'Margherita Pizza', description: 'Traditional Italian pizza with tomato, mozzarella, and basil.' },\n  { id: 3, name: 'Caesar Salad', description: 'Fresh salad with romaine lettuce, croutons, Parmesan cheese, and Caesar dressing.' },\n  // Add more fake recipes as needed\n];\n\nconst HomeScreen = ({ navigation }) => {\n  const [recipes, setRecipes] = useState(fakeRecipes);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedRecipe, setSelectedRecipe] = useState(null);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const filteredRecipes = recipes.filter(recipe => recipe.name.toLowerCase().includes(searchQuery.toLowerCase()));\n\n  const handleFoodCardPress = (foodId) => {\n    const recipe = recipes.find(recipe => recipe.id === foodId);\n    setSelectedRecipe(recipe);\n    setIsModalVisible(true);\n  };\n\n  const closeModal = () => {\n    setIsModalVisible(false);\n    setSelectedRecipe(null);\n  };\n\n  return (\n    <View style={{ flex: 1, padding: 25 }}>\n      <Text style={{ fontSize: 24, fontWeight: 'bold' }}>Hello, Noman!</Text>\n      <Text style={{ fontSize: 18 }}>Make your own food, home</Text>\n      \n      <SearchBar\n        placeholder=\"Search recipes...\"\n        onChangeText={(text) => setSearchQuery(text)}\n        value={searchQuery}\n        lightTheme\n        round\n        containerStyle={{ backgroundColor: 'transparent', borderTopWidth: 0, borderBottomWidth: 0, top: 30 }}\n        inputContainerStyle={{ backgroundColor: 'white' }}\n        searchIcon={{ name: 'search', color: 'gray' }}\n      />\n\n      <FlatList\n        data={filteredRecipes}\n        renderItem={({ item }) => <FoodCard foodData={item} onPress={() => handleFoodCardPress(item.id)} />}\n        keyExtractor={item => item.id.toString()}\n        style={{ marginTop: 60 }}\n      />\n\n      {/* Recipe Details Modal */}\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={isModalVisible}\n        onRequestClose={closeModal}\n      >\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: 'rgba(0, 0, 0, 0.5)' }}>\n          <View style={{ backgroundColor: 'white', padding: 20, borderRadius: 10, width: screenWidth - 40 }}>\n            {selectedRecipe && (\n              <>\n                <Text style={{ fontSize: 18, fontWeight: 'bold', marginBottom: 10 }}>{selectedRecipe.name}</Text>\n                <Text style={{ marginBottom: 10 }}>{selectedRecipe.description}</Text>\n                <Button title=\"Close\" onPress={closeModal} />\n              </>\n            )}\n          </View>\n        </View>\n      </Modal>\n\n      {/* Add New Recipe button */}\n      <TouchableOpacity\n        style={{\n          position: 'absolute',\n          bottom: 20,\n          right: 20,\n          backgroundColor: 'red',\n          width: 60,\n          height: 60,\n          borderRadius: 30,\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n        onPress={() => navigation.navigate('AddRecipeForm')}\n      >\n        <Text style={{ color: 'white', fontSize: 24, fontWeight: 'bold' }}>+</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default HomeScreen;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAExC,SAASC,SAAS,QAAQ,uBAAuB;AACjD,OAAOC,QAAQ;AAA+B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAC9C,IAAMC,WAAW,GAAGd,UAAU,CAACe,GAAG,CAAC,QAAQ,CAAC,CAACC,KAAK;AAElD,IAAMC,WAAW,GAAG,CAClB;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,qBAAqB;EAAEC,WAAW,EAAE;AAA8C,CAAC,EAClG;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,kBAAkB;EAAEC,WAAW,EAAE;AAAgE,CAAC,EACjH;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,cAAc;EAAEC,WAAW,EAAE;AAAoF,CAAC,CAElI;AAED,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC9B,IAAAC,SAAA,GAA8B1B,QAAQ,CAACmB,WAAW,CAAC;IAAAQ,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5CG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,UAAA,GAAsC/B,QAAQ,CAAC,EAAE,CAAC;IAAAgC,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA3CE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAClC,IAAAG,UAAA,GAA4CnC,QAAQ,CAAC,IAAI,CAAC;IAAAoC,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAnDE,cAAc,GAAAD,UAAA;IAAEE,iBAAiB,GAAAF,UAAA;EACxC,IAAAG,UAAA,GAA4CvC,QAAQ,CAAC,KAAK,CAAC;IAAAwC,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAApDE,cAAc,GAAAD,UAAA;IAAEE,iBAAiB,GAAAF,UAAA;EAExC,IAAMG,eAAe,GAAGd,OAAO,CAACe,MAAM,CAAC,UAAAC,MAAM;IAAA,OAAIA,MAAM,CAACxB,IAAI,CAACyB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACd,WAAW,CAACa,WAAW,CAAC,CAAC,CAAC;EAAA,EAAC;EAE/G,IAAME,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIC,MAAM,EAAK;IACtC,IAAMJ,MAAM,GAAGhB,OAAO,CAACqB,IAAI,CAAC,UAAAL,MAAM;MAAA,OAAIA,MAAM,CAACzB,EAAE,KAAK6B,MAAM;IAAA,EAAC;IAC3DX,iBAAiB,CAACO,MAAM,CAAC;IACzBH,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,IAAMS,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACvBT,iBAAiB,CAAC,KAAK,CAAC;IACxBJ,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,OACEvB,KAAA,CAACR,IAAI;IAAC6C,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAAC,QAAA,GACpC5C,IAAA,CAACN,IAAI;MAAC+C,KAAK,EAAE;QAAEI,QAAQ,EAAE,EAAE;QAAEC,UAAU,EAAE;MAAO,CAAE;MAAAF,QAAA,EAAC;IAAa,CAAM,CAAC,EACvE5C,IAAA,CAACN,IAAI;MAAC+C,KAAK,EAAE;QAAEI,QAAQ,EAAE;MAAG,CAAE;MAAAD,QAAA,EAAC;IAAwB,CAAM,CAAC,EAE9D5C,IAAA,CAACH,SAAS;MACRkD,WAAW,EAAC,mBAAmB;MAC/BC,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAK1B,cAAc,CAAC0B,IAAI,CAAC;MAAA,CAAC;MAC7CC,KAAK,EAAE5B,WAAY;MACnB6B,UAAU;MACVC,KAAK;MACLC,cAAc,EAAE;QAAEC,eAAe,EAAE,aAAa;QAAEC,cAAc,EAAE,CAAC;QAAEC,iBAAiB,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAG,CAAE;MACrGC,mBAAmB,EAAE;QAAEJ,eAAe,EAAE;MAAQ,CAAE;MAClDK,UAAU,EAAE;QAAEjD,IAAI,EAAE,QAAQ;QAAEkD,KAAK,EAAE;MAAO;IAAE,CAC/C,CAAC,EAEF5D,IAAA,CAACR,QAAQ;MACPqE,IAAI,EAAE7B,eAAgB;MACtB8B,UAAU,EAAE,SAAAA,WAAAC,KAAA;QAAA,IAAGC,IAAI,GAAAD,KAAA,CAAJC,IAAI;QAAA,OAAOhE,IAAA,CAACF,QAAQ;UAACmE,QAAQ,EAAED,IAAK;UAACE,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAM7B,mBAAmB,CAAC2B,IAAI,CAACvD,EAAE,CAAC;UAAA;QAAC,CAAE,CAAC;MAAA,CAAC;MACpG0D,YAAY,EAAE,SAAAA,aAAAH,IAAI;QAAA,OAAIA,IAAI,CAACvD,EAAE,CAAC2D,QAAQ,CAAC,CAAC;MAAA,CAAC;MACzC3B,KAAK,EAAE;QAAE4B,SAAS,EAAE;MAAG;IAAE,CAC1B,CAAC,EAGFrE,IAAA,CAACP,KAAK;MACJ6E,aAAa,EAAC,OAAO;MACrBC,WAAW,EAAE,IAAK;MAClBC,OAAO,EAAE1C,cAAe;MACxB2C,cAAc,EAAEjC,UAAW;MAAAI,QAAA,EAE3B5C,IAAA,CAACJ,IAAI;QAAC6C,KAAK,EAAE;UAAEC,IAAI,EAAE,CAAC;UAAEgC,cAAc,EAAE,QAAQ;UAAEC,UAAU,EAAE,QAAQ;UAAErB,eAAe,EAAE;QAAqB,CAAE;QAAAV,QAAA,EAC9G5C,IAAA,CAACJ,IAAI;UAAC6C,KAAK,EAAE;YAAEa,eAAe,EAAE,OAAO;YAAEX,OAAO,EAAE,EAAE;YAAEiC,YAAY,EAAE,EAAE;YAAErE,KAAK,EAAEF,WAAW,GAAG;UAAG,CAAE;UAAAuC,QAAA,EAC/FlB,cAAc,IACbtB,KAAA,CAAAF,SAAA;YAAA0C,QAAA,GACE5C,IAAA,CAACN,IAAI;cAAC+C,KAAK,EAAE;gBAAEI,QAAQ,EAAE,EAAE;gBAAEC,UAAU,EAAE,MAAM;gBAAE+B,YAAY,EAAE;cAAG,CAAE;cAAAjC,QAAA,EAAElB,cAAc,CAAChB;YAAI,CAAO,CAAC,EACjGV,IAAA,CAACN,IAAI;cAAC+C,KAAK,EAAE;gBAAEoC,YAAY,EAAE;cAAG,CAAE;cAAAjC,QAAA,EAAElB,cAAc,CAACf;YAAW,CAAO,CAAC,EACtEX,IAAA,CAACV,MAAM;cAACwF,KAAK,EAAC,OAAO;cAACZ,OAAO,EAAE1B;YAAW,CAAE,CAAC;UAAA,CAC7C;QACH,CACG;MAAC,CACH;IAAC,CACF,CAAC,EAGRxC,IAAA,CAACL,gBAAgB;MACf8C,KAAK,EAAE;QACLsC,QAAQ,EAAE,UAAU;QACpBC,MAAM,EAAE,EAAE;QACVC,KAAK,EAAE,EAAE;QACT3B,eAAe,EAAE,KAAK;QACtB/C,KAAK,EAAE,EAAE;QACT2E,MAAM,EAAE,EAAE;QACVN,YAAY,EAAE,EAAE;QAChBF,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE;MACd,CAAE;MACFT,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMpD,UAAU,CAACqE,QAAQ,CAAC,eAAe,CAAC;MAAA,CAAC;MAAAvC,QAAA,EAEpD5C,IAAA,CAACN,IAAI;QAAC+C,KAAK,EAAE;UAAEmB,KAAK,EAAE,OAAO;UAAEf,QAAQ,EAAE,EAAE;UAAEC,UAAU,EAAE;QAAO,CAAE;QAAAF,QAAA,EAAC;MAAC,CAAM;IAAC,CAC3D,CAAC;EAAA,CACf,CAAC;AAEX,CAAC;AAED,eAAehC,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}